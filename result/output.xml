<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.10.12 on linux)" generated="20231103 09:02:33.534" rpa="false" schemaversion="4">
<suite id="s1" name="DeMiTestChoMaXem" source="/root/Bao/auto/ex1/ex1.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Log To Console</arg>
<arg>\nTest Suite Setup.....\n\n------------------------------------------------------------------------------</arg>
<arg>AND</arg>
<arg>Create File</arg>
<arg>./conv.txt</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>\nTest Suite Setup.....\n\n------------------------------------------------------------------------------</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231103 09:02:33.702" endtime="20231103 09:02:33.703"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>./conv.txt</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20231103 09:02:33.705" level="INFO" html="true">Created file '&lt;a href="file:///root/Bao/auto/ex1/conv.txt"&gt;/root/Bao/auto/ex1/conv.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20231103 09:02:33.704" endtime="20231103 09:02:33.705"/>
</kw>
<status status="PASS" starttime="20231103 09:02:33.701" endtime="20231103 09:02:33.706"/>
</kw>
<test id="s1-t1" name="Verify &lt;New item&gt; Function With Valid Input Set" line="19">
<kw name="Run Process" library="Process">
<var>${test1}</var>
<arg>echo -n "2\netheral blade\n100\n850000\n4\n0" | ./run_file.sh</arg>
<arg>shell=True</arg>
<arg>cwd=/root/Bao/cpp/test</arg>
<arg>stdin=PIPE</arg>
<arg>stdout=/root/Bao/auto/ex1/result.txt</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20231103 09:02:33.718" level="INFO">Starting process:
echo -n "2
etheral blade
100
850000
4
0" | ./run_file.sh</msg>
<msg timestamp="20231103 09:02:33.718" level="DEBUG">Process configuration:
cwd:     /root/Bao/cpp/test
shell:   True
stdout:  /root/Bao/auto/ex1/result.txt
stderr:  PIPE
stdin:   PIPE
alias:   None
env:     None</msg>
<msg timestamp="20231103 09:02:33.738" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20231103 09:02:35.406" level="INFO">Process completed.</msg>
<msg timestamp="20231103 09:02:35.407" level="INFO">${test1} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20231103 09:02:33.717" endtime="20231103 09:02:35.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${test1.stdout.strip()}</arg>
<arg>etheral blade</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231103 09:02:35.408" endtime="20231103 09:02:35.411"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Empty All Files</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Empty All Files" library="ex1_2">
<for flavor="IN">
<var>${element}</var>
<value>@{filename}</value>
<iter>
<var name="${element}">./result.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:35.417" endtime="20231103 09:02:35.420"/>
</kw>
<status status="PASS" starttime="20231103 09:02:35.416" endtime="20231103 09:02:35.420"/>
</iter>
<iter>
<var name="${element}">./conv.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:35.421" endtime="20231103 09:02:35.421"/>
</kw>
<status status="PASS" starttime="20231103 09:02:35.420" endtime="20231103 09:02:35.422"/>
</iter>
<status status="PASS" starttime="20231103 09:02:35.416" endtime="20231103 09:02:35.432"/>
</for>
<status status="PASS" starttime="20231103 09:02:35.412" endtime="20231103 09:02:35.432"/>
</kw>
<status status="PASS" starttime="20231103 09:02:35.412" endtime="20231103 09:02:35.432"/>
</kw>
<doc>Insert a new item (1) -- Expect &lt;List all items&gt; contains the new-created item.</doc>
<tag>test1</tag>
<status status="PASS" starttime="20231103 09:02:33.707" endtime="20231103 09:02:35.433"/>
</test>
<test id="s1-t2" name="Verify &lt;New customer&gt; Function With Valid Input Set" line="26">
<kw name="Run Process" library="Process">
<var>${proc2}</var>
<arg>./mainApp</arg>
<arg>shell=True</arg>
<arg>cwd=/root/Bao/cpp/test/build</arg>
<arg>stdout=/root/Bao/auto/ex1/result.txt</arg>
<arg>stdin=/root/Bao/auto/ex1/input2.txt</arg>
<arg>timeout=1</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20231103 09:02:35.442" level="INFO">Starting process:
./mainApp</msg>
<msg timestamp="20231103 09:02:35.442" level="DEBUG">Process configuration:
cwd:     /root/Bao/cpp/test/build
shell:   True
stdout:  /root/Bao/auto/ex1/result.txt
stderr:  PIPE
stdin:   /root/Bao/auto/ex1/input2.txt
alias:   None
env:     None</msg>
<msg timestamp="20231103 09:02:35.477" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20231103 09:02:35.679" level="INFO">Process completed.</msg>
<msg timestamp="20231103 09:02:35.680" level="INFO">${proc2} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20231103 09:02:35.441" endtime="20231103 09:02:35.680"/>
</kw>
<kw name="Check customers list after adding new customers" library="ex1_2">
<var>${result2}</var>
<arg>./result.txt</arg>
<arg>./conv.txt</arg>
<kw name="Match Regex Customer" library="lib">
<doc>Find all customer's info in ``ifile``, then write to ``ofile``</doc>
<status status="PASS" starttime="20231103 09:02:35.682" endtime="20231103 09:02:35.685"/>
</kw>
<kw name="Verify Customer Output" library="lib">
<var>${ver}</var>
<doc>Verify the output ``ofile`` of ``List all customers`` function after adding some new customers. </doc>
<msg timestamp="20231103 09:02:35.688" level="INFO">${ver} = 4</msg>
<status status="PASS" starttime="20231103 09:02:35.686" endtime="20231103 09:02:35.689"/>
</kw>
<return>
<value>${ver}</value>
<status status="PASS" starttime="20231103 09:02:35.696" endtime="20231103 09:02:35.696"/>
</return>
<msg timestamp="20231103 09:02:35.697" level="INFO">${result2} = 4</msg>
<status status="PASS" starttime="20231103 09:02:35.681" endtime="20231103 09:02:35.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result2}</arg>
<arg>4</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231103 09:02:35.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231103 09:02:35.698" endtime="20231103 09:02:35.699"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Empty All Files</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Empty All Files" library="ex1_2">
<for flavor="IN">
<var>${element}</var>
<value>@{filename}</value>
<iter>
<var name="${element}">./result.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:35.703" endtime="20231103 09:02:35.705"/>
</kw>
<status status="PASS" starttime="20231103 09:02:35.702" endtime="20231103 09:02:35.706"/>
</iter>
<iter>
<var name="${element}">./conv.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:35.707" endtime="20231103 09:02:35.714"/>
</kw>
<status status="PASS" starttime="20231103 09:02:35.707" endtime="20231103 09:02:35.715"/>
</iter>
<status status="PASS" starttime="20231103 09:02:35.701" endtime="20231103 09:02:35.715"/>
</for>
<status status="PASS" starttime="20231103 09:02:35.700" endtime="20231103 09:02:35.715"/>
</kw>
<status status="PASS" starttime="20231103 09:02:35.700" endtime="20231103 09:02:35.715"/>
</kw>
<doc>Insert new customers (2) -- Expect &lt;List all customers&gt; contains the new-created customers.</doc>
<tag>test2</tag>
<status status="PASS" starttime="20231103 09:02:35.433" endtime="20231103 09:02:35.716"/>
</test>
<test id="s1-t3" name="Verify &lt;New customer&gt; Function With Wrong Info" line="37">
<kw name="Run Process" library="Process">
<var>${proc3}</var>
<arg>echo -n "1\nbao\n \n911\n3\n0" | ./mainApp</arg>
<arg>shell=True</arg>
<arg>cwd=/root/Bao/cpp/test/build</arg>
<arg>stdout=/root/Bao/auto/ex1/result.txt</arg>
<arg>stdin=PIPE</arg>
<arg>timeout=1</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20231103 09:02:35.719" level="INFO">Starting process:
echo -n "1
bao
 
911
3
0" | ./mainApp</msg>
<msg timestamp="20231103 09:02:35.719" level="DEBUG">Process configuration:
cwd:     /root/Bao/cpp/test/build
shell:   True
stdout:  /root/Bao/auto/ex1/result.txt
stderr:  PIPE
stdin:   PIPE
alias:   None
env:     None</msg>
<msg timestamp="20231103 09:02:35.737" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20231103 09:02:35.838" level="INFO">Process completed.</msg>
<msg timestamp="20231103 09:02:35.839" level="INFO">${proc3} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20231103 09:02:35.718" endtime="20231103 09:02:35.839"/>
</kw>
<kw name="Check customers list after adding new customers" library="ex1_2">
<var>${result3}</var>
<arg>./result.txt</arg>
<arg>./conv.txt</arg>
<kw name="Match Regex Customer" library="lib">
<doc>Find all customer's info in ``ifile``, then write to ``ofile``</doc>
<status status="PASS" starttime="20231103 09:02:35.841" endtime="20231103 09:02:35.842"/>
</kw>
<kw name="Verify Customer Output" library="lib">
<var>${ver}</var>
<doc>Verify the output ``ofile`` of ``List all customers`` function after adding some new customers. </doc>
<msg timestamp="20231103 09:02:35.843" level="INFO">${ver} = Fail at Address field - profile 1
Actual value: "Address:"
Expect value: non empty letter sequence</msg>
<status status="PASS" starttime="20231103 09:02:35.842" endtime="20231103 09:02:35.843"/>
</kw>
<return>
<value>${ver}</value>
<status status="PASS" starttime="20231103 09:02:35.843" endtime="20231103 09:02:35.844"/>
</return>
<msg timestamp="20231103 09:02:35.844" level="INFO">${result3} = Fail at Address field - profile 1
Actual value: "Address:"
Expect value: non empty letter sequence</msg>
<status status="PASS" starttime="20231103 09:02:35.840" endtime="20231103 09:02:35.844"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>\n\n${result3}\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231103 09:02:35.847" endtime="20231103 09:02:35.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result3}</arg>
<arg>Fail at Address field</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231103 09:02:35.853" endtime="20231103 09:02:35.854"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Empty All Files</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Empty All Files" library="ex1_2">
<for flavor="IN">
<var>${element}</var>
<value>@{filename}</value>
<iter>
<var name="${element}">./result.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:35.857" endtime="20231103 09:02:35.858"/>
</kw>
<status status="PASS" starttime="20231103 09:02:35.857" endtime="20231103 09:02:35.858"/>
</iter>
<iter>
<var name="${element}">./conv.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:35.860" endtime="20231103 09:02:35.861"/>
</kw>
<status status="PASS" starttime="20231103 09:02:35.860" endtime="20231103 09:02:35.861"/>
</iter>
<status status="PASS" starttime="20231103 09:02:35.857" endtime="20231103 09:02:35.861"/>
</for>
<status status="PASS" starttime="20231103 09:02:35.855" endtime="20231103 09:02:35.861"/>
</kw>
<status status="PASS" starttime="20231103 09:02:35.855" endtime="20231103 09:02:35.861"/>
</kw>
<doc>Insert new customers (2) with empty &lt;Addres&gt; -- Expect return "Fail at Address field"</doc>
<tag>test3</tag>
<status status="PASS" starttime="20231103 09:02:35.717" endtime="20231103 09:02:35.864"/>
</test>
<test id="s1-t4" name="Verify &lt;Make a new order&gt; Function With Invalid Input Set" line="48">
<kw name="Run Process" library="Process">
<var>${proc4}</var>
<arg>echo -n "6\n123\niphone\n0" | ./mainApp</arg>
<arg>shell=True</arg>
<arg>cwd=/root/Bao/cpp/test/build</arg>
<arg>stdout=/root/Bao/auto/ex1/result.txt</arg>
<arg>stdin=PIPE</arg>
<arg>timeout=1</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20231103 09:02:35.875" level="INFO">Starting process:
echo -n "6
123
iphone
0" | ./mainApp</msg>
<msg timestamp="20231103 09:02:35.875" level="DEBUG">Process configuration:
cwd:     /root/Bao/cpp/test/build
shell:   True
stdout:  /root/Bao/auto/ex1/result.txt
stderr:  PIPE
stdin:   PIPE
alias:   None
env:     None</msg>
<msg timestamp="20231103 09:02:35.894" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20231103 09:02:35.995" level="INFO">Process completed.</msg>
<msg timestamp="20231103 09:02:35.996" level="INFO">${proc4} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20231103 09:02:35.872" endtime="20231103 09:02:35.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${proc4.stdout.strip()}</arg>
<arg>Item not exits</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231103 09:02:35.997" endtime="20231103 09:02:35.999"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Empty All Files</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Empty All Files" library="ex1_2">
<for flavor="IN">
<var>${element}</var>
<value>@{filename}</value>
<iter>
<var name="${element}">./result.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:36.002" endtime="20231103 09:02:36.002"/>
</kw>
<status status="PASS" starttime="20231103 09:02:36.001" endtime="20231103 09:02:36.003"/>
</iter>
<iter>
<var name="${element}">./conv.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:36.003" endtime="20231103 09:02:36.020"/>
</kw>
<status status="PASS" starttime="20231103 09:02:36.003" endtime="20231103 09:02:36.020"/>
</iter>
<status status="PASS" starttime="20231103 09:02:36.001" endtime="20231103 09:02:36.021"/>
</for>
<status status="PASS" starttime="20231103 09:02:36.000" endtime="20231103 09:02:36.021"/>
</kw>
<status status="PASS" starttime="20231103 09:02:36.000" endtime="20231103 09:02:36.021"/>
</kw>
<doc>Insert new orders (6) -- Make an order with not available item -- Expect message "Item not exits"
Step       |  Input
Select (6) |  Type Customer's ID (number only): 123
           |  Type item's name: iphone 15
 ---------------------------------------------------------------------------------------
           |  Output
 ---------------------------------------------------------------------------------------
&lt;console&gt;  |  Expect logging to console:  "Item not exits"
Select (0) |  Exit program</doc>
<tag>test4</tag>
<status status="PASS" starttime="20231103 09:02:35.869" endtime="20231103 09:02:36.021"/>
</test>
<test id="s1-t5" name="Verify &lt;Make a new order&gt; Function With Invalid Input Set 2" line="65">
<kw name="Run Process" library="Process">
<var>${proc5}</var>
<arg>echo -n "2\netheral blade\n10\n800000\n6\n123\netheral blade\n101\n0" | ./run_file.sh</arg>
<arg>shell=True</arg>
<arg>cwd=/root/Bao/cpp/test/</arg>
<arg>stdout=/root/Bao/auto/ex1/result.txt</arg>
<arg>stdin=PIPE</arg>
<arg>timeout=5</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20231103 09:02:36.027" level="INFO">Starting process:
echo -n "2
etheral blade
10
800000
6
123
etheral blade
101
0" | ./run_file.sh</msg>
<msg timestamp="20231103 09:02:36.027" level="DEBUG">Process configuration:
cwd:     /root/Bao/cpp/test
shell:   True
stdout:  /root/Bao/auto/ex1/result.txt
stderr:  PIPE
stdin:   PIPE
alias:   None
env:     None</msg>
<msg timestamp="20231103 09:02:36.046" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20231103 09:02:37.049" level="INFO">Process completed.</msg>
<msg timestamp="20231103 09:02:37.050" level="INFO">${proc5} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20231103 09:02:36.026" endtime="20231103 09:02:37.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${proc5.stdout.strip()}</arg>
<arg>Item etheral blade have only 10 in stock</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231103 09:02:37.051" endtime="20231103 09:02:37.053"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Empty All Files</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Empty All Files" library="ex1_2">
<for flavor="IN">
<var>${element}</var>
<value>@{filename}</value>
<iter>
<var name="${element}">./result.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:37.068" endtime="20231103 09:02:37.069"/>
</kw>
<status status="PASS" starttime="20231103 09:02:37.065" endtime="20231103 09:02:37.074"/>
</iter>
<iter>
<var name="${element}">./conv.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:37.076" endtime="20231103 09:02:37.078"/>
</kw>
<status status="PASS" starttime="20231103 09:02:37.076" endtime="20231103 09:02:37.084"/>
</iter>
<status status="PASS" starttime="20231103 09:02:37.057" endtime="20231103 09:02:37.084"/>
</for>
<status status="PASS" starttime="20231103 09:02:37.056" endtime="20231103 09:02:37.084"/>
</kw>
<status status="PASS" starttime="20231103 09:02:37.054" endtime="20231103 09:02:37.085"/>
</kw>
<doc>Make a new orders (6) with invalid input &lt;quantities&gt; -- Expect message "Item x have only y in stock"
Step       |  Input
---------------------------------------------------------------------------------------
Select (2) |  Insert item's name: etheral blade
           |  Insert item's quantities: 10
           |  Insert price: 800000
Select (6) |  Type Customer's ID (number only): 123
           |  Type item's name: etheral blade
           |  Quantities: 101
 ---------------------------------------------------------------------------------------
           |  Output
 ---------------------------------------------------------------------------------------
&lt;console&gt;  |  Expect logging to console:  "Item /etheral blade/ have only /10/ in stock"
Select (0) |  Exit program</doc>
<tag>test5</tag>
<status status="PASS" starttime="20231103 09:02:36.022" endtime="20231103 09:02:37.085"/>
</test>
<test id="s1-t6" name="Verify &lt;Make a new order&gt; Function With Valid Input Set" line="88">
<kw name="Run Process" library="Process">
<var>${proc6}</var>
<arg>echo -n "6\n123\ndivine rapier\n1\nn\nnam\ntma\n911\n3\n0" | ./run_file.sh</arg>
<arg>shell=True</arg>
<arg>stdout=/root/Bao/auto/ex1/result.txt</arg>
<arg>stdin=PIPE</arg>
<arg>timeout=5</arg>
<arg>cwd=/root/Bao/cpp/test/</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20231103 09:02:37.102" level="INFO">Starting process:
echo -n "6
123
divine rapier
1
n
nam
tma
911
3
0" | ./run_file.sh</msg>
<msg timestamp="20231103 09:02:37.102" level="DEBUG">Process configuration:
cwd:     /root/Bao/cpp/test
shell:   True
stdout:  /root/Bao/auto/ex1/result.txt
stderr:  PIPE
stdin:   PIPE
alias:   None
env:     None</msg>
<msg timestamp="20231103 09:02:37.118" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20231103 09:02:38.822" level="INFO">Process completed.</msg>
<msg timestamp="20231103 09:02:38.823" level="INFO">${proc6} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20231103 09:02:37.100" endtime="20231103 09:02:38.823"/>
</kw>
<kw name="Check customer's order list after making a new order" library="ex1_2">
<var>${result6}</var>
<arg>./result.txt</arg>
<arg>nam</arg>
<doc>Alias Keyword for &lt;Verify OrderID In Customer&gt;</doc>
<kw name="Verify OrderID In Customer" library="lib">
<var>${ver}</var>
<arg>nam</arg>
<doc>Search for the Order's Assigned ID in ``file name`` after making an order. 
Then search for ``Order list`` of the customer that have just made this order
and verify that the ``Order's Assigned ID`` now has been in the customer's ``Order list``</doc>
<msg timestamp="20231103 09:02:38.828" level="INFO">${ver} = Found the new order ID in customer's order list</msg>
<status status="PASS" starttime="20231103 09:02:38.826" endtime="20231103 09:02:38.828"/>
</kw>
<return>
<value>${ver}</value>
<status status="PASS" starttime="20231103 09:02:38.828" endtime="20231103 09:02:38.830"/>
</return>
<msg timestamp="20231103 09:02:38.831" level="INFO">${result6} = Found the new order ID in customer's order list</msg>
<status status="PASS" starttime="20231103 09:02:38.825" endtime="20231103 09:02:38.831"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result6}</arg>
<arg>Found the new order ID in customer's order list</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20231103 09:02:38.839" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231103 09:02:38.837" endtime="20231103 09:02:38.839"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Empty All Files</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Empty All Files" library="ex1_2">
<for flavor="IN">
<var>${element}</var>
<value>@{filename}</value>
<iter>
<var name="${element}">./result.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:38.842" endtime="20231103 09:02:38.843"/>
</kw>
<status status="PASS" starttime="20231103 09:02:38.842" endtime="20231103 09:02:38.845"/>
</iter>
<iter>
<var name="${element}">./conv.txt</var>
<kw name="Empty File" library="lib">
<arg>${element}</arg>
<doc>Clear content of ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:38.845" endtime="20231103 09:02:38.848"/>
</kw>
<status status="PASS" starttime="20231103 09:02:38.845" endtime="20231103 09:02:38.848"/>
</iter>
<status status="PASS" starttime="20231103 09:02:38.841" endtime="20231103 09:02:38.848"/>
</for>
<status status="PASS" starttime="20231103 09:02:38.841" endtime="20231103 09:02:38.848"/>
</kw>
<status status="PASS" starttime="20231103 09:02:38.840" endtime="20231103 09:02:38.849"/>
</kw>
<doc>Make a new orders (6) with valid input -- Expect info is saved successfully
Step       |  Input
---------------------------------------------------------------------------------------
Select (6) |  Type Customer's ID (number only): 123
           |  Type item's name: divine rapier
           |  Quantities: 1
           |  Continue shopping? (Y|N): n
 &lt;console&gt; |  Customer not found! Create new...
           |  Input your name: nam
           |  Input your address: tma
           |  Input your phone num: 911
 ---------------------------------------------------------------------------------------
           |  Output
 ---------------------------------------------------------------------------------------
 &lt;console&gt; |  Assigned customer's ID: some number
 &lt;console&gt; |  Assigned order's ID: some number
 &lt;console&gt; |  Total: 1000000.00
Select (3) |  Expect this customer will be listed with &lt;List all customers&gt;, and /Order list/ includes new generated order's ID
Select (0) |  Exit program</doc>
<tag>test6</tag>
<status status="PASS" starttime="20231103 09:02:37.087" endtime="20231103 09:02:38.855"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Terminate All Processes</arg>
<arg>kill=True</arg>
<arg>AND</arg>
<arg>Log to Console</arg>
<arg>\nComment out @{filename} file at Resource to read the output file\n</arg>
<arg>AND</arg>
<arg>Delete All Files</arg>
<arg>AND</arg>
<arg>Log To Console</arg>
<arg>Test Suite Teardown.....\n</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Terminate All Processes" library="Process">
<arg>kill=True</arg>
<doc>Terminates all still running processes started by this library.</doc>
<status status="PASS" starttime="20231103 09:02:38.859" endtime="20231103 09:02:38.860"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>\nComment out @{filename} file at Resource to read the output file\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231103 09:02:38.860" endtime="20231103 09:02:38.864"/>
</kw>
<kw name="Delete All Files" library="ex1_2">
<for flavor="IN">
<var>${element}</var>
<value>@{filename}</value>
<iter>
<var name="${element}">./result.txt</var>
<kw name="Delete File" library="lib">
<arg>${element}</arg>
<doc>Delete ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:38.867" endtime="20231103 09:02:38.868"/>
</kw>
<status status="PASS" starttime="20231103 09:02:38.865" endtime="20231103 09:02:38.871"/>
</iter>
<iter>
<var name="${element}">./conv.txt</var>
<kw name="Delete File" library="lib">
<arg>${element}</arg>
<doc>Delete ``filename`` </doc>
<status status="PASS" starttime="20231103 09:02:38.872" endtime="20231103 09:02:38.873"/>
</kw>
<status status="PASS" starttime="20231103 09:02:38.872" endtime="20231103 09:02:38.873"/>
</iter>
<status status="PASS" starttime="20231103 09:02:38.865" endtime="20231103 09:02:38.874"/>
</for>
<status status="PASS" starttime="20231103 09:02:38.864" endtime="20231103 09:02:38.874"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Suite Teardown.....\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231103 09:02:38.874" endtime="20231103 09:02:38.875"/>
</kw>
<status status="PASS" starttime="20231103 09:02:38.857" endtime="20231103 09:02:38.880"/>
</kw>
<doc>This is Documentation for ex1.robot test file</doc>
<status status="PASS" starttime="20231103 09:02:33.536" endtime="20231103 09:02:38.880"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">test1</stat>
<stat pass="1" fail="0" skip="0">test2</stat>
<stat pass="1" fail="0" skip="0">test3</stat>
<stat pass="1" fail="0" skip="0">test4</stat>
<stat pass="1" fail="0" skip="0">test5</stat>
<stat pass="1" fail="0" skip="0">test6</stat>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="DeMiTestChoMaXem">DeMiTestChoMaXem</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
